{"mappings":"AAAA,MAAM,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,AAAC;AAE1D,MAAM,OAAO,GAAG,SAAU,CAAC,EAAE;IAC5B,OAAO,IAAI,OAAO,CAAC,SAAU,CAAC,EAAE,MAAM,EAAE;QACvC,UAAU,CAAC,WAAY;YACtB,MAAM,CAAC,IAAI,KAAK,CAAC,CAAC,qCAAqC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;SACtE,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;KACb,CAAC,CAAC;CACH,AAAC;AAEF,uCAAuC;AAEvC,uCAAuC;AAEvC,MAAM,UAAU,GAAG,iBAAkB;IACpC,IAAI;QACH,oBAAoB;QACpB,MAAM,GAAG,GAAG,MAAM,KAAK,CACtB,2EAA2E,CAC3E,AAAC;QACF,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,IAAI,EAAE,AAAC;QAE9B,IAAI,CAAC,GAAG,CAAC,EAAE,EACV,MAAM,IAAI,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAGpD,iCAAiC;QACjC,4BAA4B;QAC5B,IAAI,EAAE,MAAM,CAAA,EAAE,GAAG,IAAI,CAAC,IAAI,AAAC;QAC3B,MAAM,GAAG;YACR,EAAE,EAAE,MAAM,CAAC,EAAE;YACb,KAAK,EAAE,MAAM,CAAC,KAAK;YACnB,SAAS,EAAE,MAAM,CAAC,SAAS;YAC3B,SAAS,EAAE,MAAM,CAAC,UAAU;YAC5B,KAAK,EAAE,MAAM,CAAC,SAAS;YACvB,QAAQ,EAAE,MAAM,CAAC,QAAQ;YACzB,WAAW,EAAE,MAAM,CAAC,YAAY;YAChC,WAAW,EAAE,MAAM,CAAC,WAAW;SAC/B,CAAC;QAEF,sBAAsB;QACtB,MAAM,MAAM,GAAG,CAAC;;kBAEA,EAAE,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,MAAM,CAAC,KAAK,CAAC;;gBAEvC,EAAE,MAAM,CAAC,KAAK,CAAC;;;;;;;;;;qEAUsC,EAC/D,MAAM,CAAC,WAAW,CAClB;;;;;;;oEAO8D,EAC9D,MAAM,CAAC,QAAQ,CACf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAgCE,EAAE,MAAM,CAAC,WAAW,CACtB,GAAG,CAAC,CAAA,GAAG,GAAI;YACX,OAAO,CAAC;;;;;4CAK8B,EAAE,GAAG,CAAC,QAAQ,CAAC;;2CAEhB,EAAE,GAAG,CAAC,IAAI,CAAC;gBACtC,EAAE,GAAG,CAAC,WAAW,CAAC;;;UAGxB,CAAC,CAAC;SACN,CAAC,CACD,IAAI,CAAC,EAAE,CAAC,CAAC;;;;;;;;0CAQ2B,EACpC,MAAM,CAAC,SAAS,CAChB;;;;;gBAKU,EAAE,MAAM,CAAC,SAAS,CAAC;;;;;;;;;IAS/B,CAAC,AAAC;QACJ,eAAe,CAAC,SAAS,GAAG,EAAE,CAAC;QAC/B,eAAe,CAAC,kBAAkB,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;KACzD,CAAC,OAAO,KAAK,EAAE;QACf,KAAK,CAAC,KAAK,CAAC,CAAC;IACb,iBAAiB;KACjB;CACD,AAAC;AAEF,UAAU,EAAE,CAAC","sources":["src/js/controller.js"],"sourcesContent":["const recipeContainer = document.querySelector('.recipe');\n\nconst timeout = function (s) {\n\treturn new Promise(function (_, reject) {\n\t\tsetTimeout(function () {\n\t\t\treject(new Error(`Request took too long! Timeout after ${s} second`));\n\t\t}, s * 1000);\n\t});\n};\n\n// https://forkify-api.herokuapp.com/v2\n\n///////////////////////////////////////\n\nconst showRecipe = async function () {\n\ttry {\n\t\t// 1. Loading recipe\n\t\tconst res = await fetch(\n\t\t\t'https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bc886'\n\t\t);\n\t\tconst data = await res.json();\n\n\t\tif (!res.ok) {\n\t\t\tthrow new Error(`${data.message} (${res.status})`);\n\t\t}\n\n\t\t// let recipe = data.data.recipe;\n\t\t// We use destructuring here\n\t\tlet { recipe } = data.data;\n\t\trecipe = {\n\t\t\tid: recipe.id,\n\t\t\ttitle: recipe.title,\n\t\t\tpublisher: recipe.publisher,\n\t\t\tsourceUrl: recipe.source_url,\n\t\t\timage: recipe.image_url,\n\t\t\tservings: recipe.servings,\n\t\t\tcookingTime: recipe.cooking_time,\n\t\t\tingredients: recipe.ingredients,\n\t\t};\n\n\t\t// 2. Rendering recipe\n\t\tconst markup = `\n      <figure class=\"recipe__fig\">\n        <img src=\"${recipe.image}\" alt=\"${recipe.title}\" class=\"recipe__img\" />\n        <h1 class=\"recipe__title\">\n          <span>${recipe.title}</span>\n        </h1>\n      </figure>\n        \n\n      <div class=\"recipe__details\">\n        <div class=\"recipe__info\">\n          <svg class=\"recipe__info-icon\">\n            <use href=\"src/img/icons.svg#icon-clock\"></use>\n          </svg>\n          <span class=\"recipe__info-data recipe__info-data--minutes\">${\n\t\t\t\t\t\trecipe.cookingTime\n\t\t\t\t\t}</span>\n          <span class=\"recipe__info-text\">minutes</span>\n        </div>\n        <div class=\"recipe__info\">\n          <svg class=\"recipe__info-icon\">\n            <use href=\"src/img/icons.svg#icon-users\"></use>\n          </svg>\n          <span class=\"recipe__info-data recipe__info-data--people\">${\n\t\t\t\t\t\trecipe.servings\n\t\t\t\t\t}</span>\n          <span class=\"recipe__info-text\">servings</span>\n\n          <div class=\"recipe__info-buttons\">\n            <button class=\"btn--tiny btn--increase-servings\">\n              <svg>\n                <use href=\"src/img/icons.svg#icon-minus-circle\"></use>\n              </svg>\n            </button>\n            <button class=\"btn--tiny btn--increase-servings\">\n              <svg>\n                <use href=\"src/img/icons.svg#icon-plus-circle\"></use>\n              </svg>\n            </button>\n          </div>\n        </div>\n\n        <div class=\"recipe__user-generated\">\n          <svg>\n            <use href=\"src/img/icons.svg#icon-user\"></use>\n          </svg>\n        </div>\n        <button class=\"btn--round\">\n          <svg class=\"\">\n            <use href=\"src/img/icons.svg#icon-bookmark-fill\"></use>\n          </svg>\n        </button>\n      </div>\n\n      <div class=\"recipe__ingredients\">\n        <h2 class=\"heading--2\">Recipe ingredients</h2>\n        <ul class=\"recipe__ingredient-list\">\n        ${recipe.ingredients\n\t\t\t\t\t.map(ing => {\n\t\t\t\t\t\treturn `\n            <li class=\"recipe__ingredient\">\n              <svg class=\"recipe__icon\">\n                <use href=\"src/img/icons.svg#icon-check\"></use>\n              </svg>\n              <div class=\"recipe__quantity\">${ing.quantity}</div>\n              <div class=\"recipe__description\">\n                <span class=\"recipe__unit\">${ing.unit}</span>\n                ${ing.description}\n              </div>\n            </li>\n          `;\n\t\t\t\t\t})\n\t\t\t\t\t.join('')}\n        </ul>\n      </div>\n\n      <div class=\"recipe__directions\">\n        <h2 class=\"heading--2\">How to cook it</h2>\n        <p class=\"recipe__directions-text\">\n          This recipe was carefully designed and tested by\n          <span class=\"recipe__publisher\">${\n\t\t\t\t\t\trecipe.publisher\n\t\t\t\t\t}</span>. Please check out\n          directions at their website.\n        </p>\n        <a\n          class=\"btn--small recipe__btn\"\n          href=\"${recipe.sourceUrl}\"\n          target=\"_blank\"\n        >\n          <span>Directions</span>\n          <svg class=\"search__icon\">\n            <use href=\"src/img/icons.svg#icon-arrow-right\"></use>\n          </svg>\n        </a>\n      </div>\n    `;\n\t\trecipeContainer.innerHTML = '';\n\t\trecipeContainer.insertAdjacentHTML('afterbegin', markup);\n\t} catch (error) {\n\t\talert(error);\n\t\t// Why alert tho?\n\t}\n};\n\nshowRecipe();\n"],"names":[],"version":3,"file":"index.62406edb.js.map","sourceRoot":"/__parcel_source_root/"}